МИНИСТЕРСТВО ОБРАЗОВАНИЯ И НАУКИ РОССИЙСКОЙ ФЕДЕРАЦИИ
Федеральное государственное бюджетное образовательное учреждение
высшего профессионального образования
"Южно-Уральский государственный университет"
(национальный исследовательский университет)
Факультет Вычислительной математики и информатики
Кафедра системного программирования







ОТЧЕТ 
по учебной практике
бакалавра направления 010300.62 "Фундаментальная информатика и информационные технологии"






	Выполнил:
студент группы ВМИ-101
И.А.Лыжин


Проверил:
Р.С.Федянина
Ст. преподаватель кафедры СП









Челябинск-2014
 
Министерство образования и науки Российской Федерации
Южно-Уральский государственный университет
Кафедра системного программирования

УТВЕРЖДАЮ
Зав. кафедрой
системного программирования
_____________ Л.Б. Соколинский


ЗАДАНИЕ
по учебной практике
1.	Цель работы
Необходимо разработать распознаватель заданной символьной цепочки. Символьная цепочка задается с помощью формул Бэкуса-Наура. 
2.	Исходные данные к работе
1.	Йенсен К., Вирт Н. Паскаль. Руководство пользователя и описание языка. М.: Ком-пьютер, 1995.
2.	Льюис Ф., Розенкранц Д., Стирнз Р. Теоретические основы проектирования компи-ляторов. М.: Мир, 1979.
3.	Перечень подлежащих разработке вопросов
1.	Выполнить анализ требований и разработать спецификации программы.
2.	Провести проектирование программы.
3.	Реализовать спроектированные модули.
4.	Провести тестирование и отладку реализованных модулей.
4.	Сроки
Дата выдачи задания:		"30" июня 2014 г.
Срок сдачи законченной работы:	"25" июля 2014 г.

Руководитель:

ст. преподаватель кафедры СП	_____________	Р.С. Федянина
	подпись	

Задание принял к исполнению:
	_____________	И.А. Лыжин
	подпись	
 
ОГЛАВЛЕНИЕ
1. Спецификация	4
2. Проектирование	5
2.1. Модульная структура	5
2.2. Интерфейсы модулей	5
3. Кодирование	5
3.1. Структура текста программы	5
3.2. Алгоритмы реализации модулей	5
3.2.1. Блок транслитерации	5
3.2.2. Лексический блок	5
3.2.3. Синтаксический блок	5
3.2.4. Блок идентификации ключевых слов	5
3.3. Размер текста программы (в строках)	5
4. Тестирование	5
4.1. Автономное тестирование	5
4.2. Комплексное тестирование	5
Заключение	5
Литература	5

 
1. Спецификация
Необхожимо разработать распознаватель символьной цепочки. Допу-стимость символьной цепочки определяется с помощью формул Бэкуса-Наура. 

<цепочка> ::= <описание типа> 
<описание типа> ::= TYPE <идентификатор>=<тип>;
<идентификатор> ::= <буква> | <идентификатор><буква> | <идентификатор><цифра>
<буква> ::= A | B | C | D | E | F | ... | Z
<цифра> ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9
<тип> ::= array [<нижняя граница>..<верхняя граница>] of <стандартный тип> 
<нижняя граница> ::= <арифметическая операция> 
<арифметическая операция> ::= <слагаемое1><знак арифмети-ческой операции><слагаемое2>
<слагаемое1> ::= <целая константа> 
<целая константа> ::= <целое со знаком> | <целое без зна-ка>
<целое со знаком> ::= <знак><целое без знака>
<знак> ::= + | -
<целое без знака> ::= <цифра> | <цифра><целое без знака>
<слагаемое2> ::= <идентификатор> 
<знак арифметической операции> ::= + | - | * | div | mod
<стандартный тип> ::= BOOLEAN | BYTE | CHAR | INTEGER | LONGINT | REAL | STRING | WORD
<верхняя граница> ::= <нижняя граница>

Требования и замечания:
•	Регистр символов не имеет значения.
•	Значение нетерминального символа <идентификатор> не должно совпа-дать (без учета регистра) ни с одним ключевым словом языка программи-рования Pascal [1].

Описание входных данных. 
Цепочка записана в файле INPUT.TXT, который состоит из одной строки. Длина цепочки не превышает 80 символов.

Описание выходных данных. 
Результат распознавания необходимо записать в текстовый файл OUTPUT.TXT: сообщение  ACCEPT, если цепочка допустима, и  сообщение REJECT, если цепочка недопустима.

Примеры входных и выходных данных.
INPUT.TXT	OUTPUT.TXT
type arr = array [1+Min..1+Max] of Char;	ACCEPT
type arr = array [Min+1..Max+1] of Char;	REJECT
type arr = array [100 div Rank ..-1+Top] of Word;	ACCEPT
type arr = array [100 div 5 ..-1+Top] of Word;	REJECT
type Arr = array [3*Small..2000-Big] of Byte;	ACCEPT
type With = array [3*Small..2000-Big] of Byte;	REJECT

2. Проектирование
2.1. Модульная структура

2.2. Интерфейсы модулей
3. Кодирование
3.1. Структура текста программы
3.2. Алгоритмы реализации модулей
3.2.1. Блок транслитерации
3.2.2. Лексический блок
3.2.3. Синтаксический блок
3.2.4. Блок идентификации ключевых слов
3.3. Размер текста программы (в строках)
4. Тестирование
4.1. Автономное тестирование
4.2. Комплексное тестирование
Заключение
Литература

